1주차  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
ctal + enter   : 실행

show tables   : 테이블명 확인
select * from   : 테이블명 쿼리 날려보기
where	: 찾기
and	: 그리고
or	: 또는
!=	: 같지않음
>=	: 이상
<=	: 이하

between	: 어디부터 어디까지 
ex) WHERE created_at BETWEEN '2020-07-13' and '2020-07-15'
  
in	: 포함
ex) WHERE week in (1,3,4,7,8,9)   

like '% '	: ~,패턴(문자열)
ex) WHERE email like '%naver.com'   

Limit	: 출력되는 줄 갯수 제한   
ex) WHERE payment_method = 'kakaopay' LIMIT 5

Distinct	: 중복제거하기  
ex) SELECT distinct(payment_method) from orders


2주차  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Count	: 갯수 구하기   
ex) SELECT COUNT(DISTINCT name)  FROM users

group by	: 묶음
ex) group by name 

min	: 최소값
max	: 최대값
avg	: 평균값
sum	: 합계
ex) SELECT week,min(likes)  FROM checkins

round	: 소수점 자리수제한,반올림
ex) SELECT week,round(avg(likes),3)  FROM checkins

order by	: 정렬(기본:오름차순)    ** 항상 마지막에 적을것
desc	: 내림차순
ex) order by count(*) desc


3주차  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
as	: 별칭( Alias )

inner join	: 기존 테이블,지정한테이블 의 교집합들만 나옴    
ex)	select * from users u 
	left join point_users pu 
	on u.user_id = pu.user_id

left join	: 기존 테이블에 지정한 테이블이랑 합침    ** null 값 나옴\
is null	: null값인것 추출 
is not null : null값이 아닌것 추출  
ex) WHERE pu.point_user_id is NULL 

union all	: 코드 같이 출력하기   ** order by는 적용안됨
ex) 
( 첫번째코드 )
union all
( 두번째코드 )


4주차  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Subquery	: 임의로 table 만들어 사용하기
ex) WHERE point > (SELECT AVG(point) FROM point_users) // 임의로 정한 테이블을 where절에 사용

with	: Subquery 임의로만든 table에 명칭 지정하기
with table1 as (SELECT AVG(point) FROM point_users) // 임의로 정한테이블을 table1 단어로 명칭지정

substring( ,0,1)   : 문자열을 지정한곳(0)부터 몇번째(1) 까지 출력
ex)	SELECT order_no, created_at, substring(created_at,1,10)  ** 1~10번째 자리
	SELECT order_no, created_at, substring(created_at,12,8)  ** 12~8번째 자리 (역순으로도 사용가능)
substring_index( ,' ',-1)  : 문자열을 지정한 문자(' ')부터 몇번째(-1) 까지 출력
ex) substring_index(email,'@',-1)


case	: 문자열 추가
ex)  case when pu.point > 10000 then '1' else '0' end














